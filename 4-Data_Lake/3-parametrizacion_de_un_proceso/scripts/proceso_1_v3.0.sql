-- 
-- @author Alonso Melgarejo
-- @email alonsoraulmgs@gmail.com
-- @copyright Big Data Academy
--
-- Crea la tabla TRANSACCION_ENRIQUECIDA
-- 

-- 
-- @section Tuning
-- 

SET hive.execution.engine=mr;
SET mapreduce.job.maps=8;
SET mapreduce.input.fileinputformat.split.maxsize = 128000000;
SET mapreduce.input.fileinputformat.split.minsize = 128000000;
SET mapreduce.map.cpu.vcores=2;
SET mapreduce.map.memory.mb=128;
SET mapreduce.job.reduces=8;
SET mapreduce.reduce.cpu.vcores=2;
SET mapreduce.reduce.memory.mb=128;
SET hive.exec.dynamic.partition=true;           ---> Activar particionamiento din치mico
SET hive.exec.dynamic.partition.mode=nonstrict; ---> Activar particionamiento din치mico
SET hive.exec.max.dynamic.partitions=9999;          ---> Configurar numero de particiones
SET hive.exec.max.dynamic.partitions.pernode=9999;  ---> Configurar numero de particiones
SET hive.exec.compress.output=true;
SET parquet.compression=SNAPPY;
SET orc.compression=SNAPPY;
SET avro.output.codec=SNAPPY;
SET mapred.job.queue.name=q_user_main;
SET spark.job.queue.name=q_user_main;
SET tez.job.queue.name=q_user_main;

--
-- @section Tablas temporales
--

DROP TABLE IF EXISTS ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_1;
CREATE TEMPORARY TABLE ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_1(
ID_PERSONA STRING,
NOMBRE_PERSONA STRING,
EDAD_PERSONA INT,
SALARIO_PERSONA DOUBLE,
ID_EMPRESA_PERSONA STRING,
MONTO_TRANSACCION DOUBLE,
FECHA_TRANSACCION STRING,
ID_EMPRESA_TRANSACCION STRING
)
STORED AS PARQUET;

DROP TABLE IF EXISTS ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_2;
CREATE TEMPORARY TABLE ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_2(
ID_PERSONA STRING,
NOMBRE_PERSONA STRING,
EDAD_PERSONA INT,
SALARIO_PERSONA DOUBLE,
TRABAJO_PERSONA STRING,
MONTO_TRANSACCION DOUBLE,
FECHA_TRANSACCION STRING,
ID_EMPRESA_TRANSACCION STRING
)
STORED AS PARQUET;

DROP TABLE IF EXISTS ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_EMPRESA_ENRIQUECIDA;
CREATE TEMPORARY TABLE ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_EMPRESA_ENRIQUECIDA(
ID_PERSONA STRING,
NOMBRE_PERSONA STRING,
EDAD_PERSONA INT,
SALARIO_PERSONA DOUBLE,
TRABAJO_PERSONA STRING,
MONTO_TRANSACCION DOUBLE,
FECHA_TRANSACCION STRING,
EMPRESA_TRANSACCION STRING
)
STORED AS PARQUET;

--
-- @section Programa
--

TRUNCATE TABLE ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_ENRIQUECIDA;

-- TRANSACCION_PERSONA_ENRIQUECIDA_1
INSERT INTO ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_1
SELECT
T.ID_PERSONA AS ID_PERSONA,
P.NOMBRE AS NOMBRE_PERSONA,
P.EDAD AS EDAD_PERSONA,
P.SALARIO AS SALARIO_PERSONA,
P.ID_EMPRESA AS ID_EMPRESA_PERSONA,
T.MONTO AS MONTO_TRANSACCION,
T.FECHA AS FECHA_TRANSACCION,
T.ID_EMPRESA AS ID_EMPRESA_TRANSACCION
FROM
${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION T
JOIN ${hiveconf:PARAM_USERNAME}_UNIVERSAL.PERSONA P
ON T.ID_PERSONA = P.ID;

SELECT * FROM ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_1 LIMIT 10;

-- TRANSACCION_PERSONA_ENRIQUECIDA_2
INSERT INTO ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_2
SELECT
T.ID_PERSONA AS ID_PERSONA,
T.NOMBRE_PERSONA AS NOMBRE_PERSONA,
T.EDAD_PERSONA AS EDAD_PERSONA,
T.SALARIO_PERSONA AS SALARIO_PERSONA,
E.NOMBRE AS TRABAJO_PERSONA,
T.MONTO_TRANSACCION AS MONTO_TRANSACCION,
T.FECHA_TRANSACCION AS FECHA_TRANSACCION,
T.ID_EMPRESA_TRANSACCION AS ID_EMPRESA_TRANSACCION
FROM
${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_1 T
JOIN ${hiveconf:PARAM_USERNAME}_UNIVERSAL.EMPRESA E
ON T.ID_EMPRESA_PERSONA = E.ID;

SELECT * FROM ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_2 LIMIT 10;

-- TRANSACCION_PERSONA_EMPRESA_ENRIQUECIDA
INSERT INTO ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_EMPRESA_ENRIQUECIDA
SELECT
T.ID_PERSONA AS ID_PERSONA,
T.NOMBRE_PERSONA AS NOMBRE_PERSONA,
T.EDAD_PERSONA AS EDAD_PERSONA,
T.SALARIO_PERSONA AS SALARIO_PERSONA,
T.TRABAJO_PERSONA AS TRABAJO_PERSONA,
T.MONTO_TRANSACCION AS MONTO_TRANSACCION,
T.FECHA_TRANSACCION AS FECHA_TRANSACCION,
E.NOMBRE AS EMPRESA_TRANSACCION
FROM
${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_2 T
JOIN ${hiveconf:PARAM_USERNAME}_UNIVERSAL.EMPRESA E
ON T.ID_EMPRESA_TRANSACCION = E.ID;

SELECT * FROM ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_EMPRESA_ENRIQUECIDA LIMIT 10;

-- Inserci칩n final
INSERT OVERWRITE TABLE ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_ENRIQUECIDA
PARTITION (FECHA_TRANSACCION)
SELECT
ID_PERSONA,
NOMBRE_PERSONA,
EDAD_PERSONA,
SALARIO_PERSONA,
TRABAJO_PERSONA,
MONTO_TRANSACCION,
EMPRESA_TRANSACCION,
FECHA_TRANSACCION
FROM
${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_EMPRESA_ENRIQUECIDA;

SELECT * FROM ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_ENRIQUECIDA LIMIT 10;

--
-- @section Eliminaci칩n de tablas temporales
--

DROP TABLE IF EXISTS ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_1;
DROP TABLE IF EXISTS ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_ENRIQUECIDA_2;
DROP TABLE IF EXISTS ${hiveconf:PARAM_USERNAME}_UNIVERSAL.TRANSACCION_PERSONA_EMPRESA_ENRIQUECIDA;